version: 2
jobs:
  build:
    docker:
      # CircleCI Go images available at: https://hub.docker.com/r/circleci/golang/
      - image: circleci/golang:1.8

    working_directory: /go/src/github.com/afrase/Gengo

    environment:
      TEST_RESULTS: /tmp/test-results

    steps:
      - checkout
      - run: mkdir -p $TEST_RESULTS

      - run:
          name: Install dependencies
          command: |
            go get golang.org/x/tools/cmd/cover
            go get github.com/mattn/goveralls

      - run:
          name: Run unit tests
          command: |
            go test -v ./... | tee ${TEST_RESULTS}/go-test.out

      - run:
          name: Run code coverage
          command: |
            echo "mode: count" > ${TEST_RESULTS}/coverage-all.out
            for pkg in $(go list ./... | sed -n '1!p'); do go test -p=1 -cover -covermode=count -coverprofile=${TEST_RESULTS}/coverage.out $pkg; tail -n +2 ${TEST_RESULTS}/coverage.out >> ${TEST_RESULTS}/coverage-all.out; done
            $(go env GOPATH | awk 'BEGIN{FS=":"} {print $1}')/bin/goveralls -coverprofile=${TEST_RESULTS}/coverage-all.out -service=circle-ci -repotoken $COVERALLS_TOKEN

      - store_artifacts:
          path: /tmp/test-results
          destination: raw-test-output

      - store_test_results:
          path: /tmp/test-results
